<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 流水沉微</title>
    <link>http://shuxiao.wang/posts/</link>
    <description>Recent content in Posts on 流水沉微</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>cn</language>
    <lastBuildDate>Sun, 24 Nov 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://shuxiao.wang/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>十号线的读书人</title>
      <link>http://shuxiao.wang/posts/reader-in-line-ten/</link>
      <pubDate>Sun, 24 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>http://shuxiao.wang/posts/reader-in-line-ten/</guid>
      <description>自2018年8月起，因为换工作和换住地，我就开始了环绕十号线半周的通勤生活，从进站闸机到出站闸机要50分钟，来往就是接近2个小时。无聊且网络</description>
    </item>
    
    <item>
      <title>自己的主题</title>
      <link>http://shuxiao.wang/posts/my-own-theme/</link>
      <pubDate>Thu, 07 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>http://shuxiao.wang/posts/my-own-theme/</guid>
      <description>终于自己做了主题 从2014年末开始，我就尝试写一点什么来记录自己，也就开始寻找做自己的博客的方法。最初使用的是jekyll，在知乎上看到有人</description>
    </item>
    
    <item>
      <title>楼梯有多少种走法</title>
      <link>http://shuxiao.wang/posts/ladder/</link>
      <pubDate>Mon, 21 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>http://shuxiao.wang/posts/ladder/</guid>
      <description>这是在 telegram 网鱼网咖群里聊天时，Haruhi贴的一个题，题目如下： 思路很简单 可以从14、13、12级跨到第15级 f(15)=f(14)+f(13)+f(12) 递推公式出来鸟~ 当然要得到一个</description>
    </item>
    
    <item>
      <title>Redis 复制时的 fork 的子进程</title>
      <link>http://shuxiao.wang/posts/redis-rdb-fork/</link>
      <pubDate>Fri, 13 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>http://shuxiao.wang/posts/redis-rdb-fork/</guid>
      <description>背景 问：Redis 主从节点同步知道吗？ 答：知道一点，不太熟 问：从节点申请同步的时候主节点做了什么？ 答：fork 一个子线程做同步 问：是子进程，</description>
    </item>
    
    <item>
      <title>A fatal communication error with WAS</title>
      <link>http://shuxiao.wang/posts/was-error/</link>
      <pubDate>Mon, 29 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>http://shuxiao.wang/posts/was-error/</guid>
      <description>背景情况 也是工作里遇到的一个问题，一个 host 在 IIS 上的古老项目（最早可以追溯到 16 年前），时不时会报下面这个错误： 应用程序池 “.NET” 提供服务的进</description>
    </item>
    
    <item>
      <title>P0: Golang Submission Error</title>
      <link>http://shuxiao.wang/posts/golang-submission-error/</link>
      <pubDate>Fri, 31 May 2019 00:00:00 +0000</pubDate>
      
      <guid>http://shuxiao.wang/posts/golang-submission-error/</guid>
      <description>Review 过了一段时间自己看都觉得这代码写得好蠢，于是改了一版，如下： package main import &amp;#34;fmt&amp;#34; func main() { fmt.Println(permute([]int{1,0,3})) } func permute(nums []int) [][]int { if len(nums) == 1 { return [][]int{ nums, } } array := nums var result [][]int generate(len(nums), &amp;amp;array, &amp;amp;result) return result } func generate(k int,</description>
    </item>
    
    <item>
      <title>CLI App in C# 其三</title>
      <link>http://shuxiao.wang/posts/cli-app-in-csharp3/</link>
      <pubDate>Tue, 14 May 2019 00:00:00 +0000</pubDate>
      
      <guid>http://shuxiao.wang/posts/cli-app-in-csharp3/</guid>
      <description>这是 CLI App in C# 系列的第三篇，本篇主要介绍gen的打包和发布。 .Net Core控制台应用的打包方法主要是两类： 可执行文件，对应直接运行，Windows</description>
    </item>
    
    <item>
      <title>CLI App in C# 其二</title>
      <link>http://shuxiao.wang/posts/cli-app-in-csharp2/</link>
      <pubDate>Sun, 12 May 2019 00:00:00 +0000</pubDate>
      
      <guid>http://shuxiao.wang/posts/cli-app-in-csharp2/</guid>
      <description>这是 CLI App in C# 系列的第二篇，本篇主要介绍gen的开发过程。教程里的所有代码参见keaising/gen 新建项目 在合适的地方使用dotnet new console</description>
    </item>
    
    <item>
      <title>CLI App in C# 其一</title>
      <link>http://shuxiao.wang/posts/cli-app-in-csharp1/</link>
      <pubDate>Sat, 11 May 2019 00:00:00 +0000</pubDate>
      
      <guid>http://shuxiao.wang/posts/cli-app-in-csharp1/</guid>
      <description>这是 CLI App in C# 系列的 第一篇 (Wa Da Keng) 写这个系列的目的是介绍用C#写一个命令行工具的所有内容，从规划、选型、编码、到打包和自动化编译的系列工作都会介</description>
    </item>
    
    <item>
      <title>处理dotnet core Redis超时异常</title>
      <link>http://shuxiao.wang/posts/stackexchange-redis-timeout/</link>
      <pubDate>Mon, 29 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>http://shuxiao.wang/posts/stackexchange-redis-timeout/</guid>
      <description>压力测试过程中遇到的一个问题，框架是asp.net core 2.2，redis组件是StackExchange.Redis 2.0.601，在高并发场</description>
    </item>
    
    <item>
      <title>在Eclipse中调用Algs4库</title>
      <link>http://shuxiao.wang/posts/algs4-eclipse/</link>
      <pubDate>Thu, 21 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>http://shuxiao.wang/posts/algs4-eclipse/</guid>
      <description>这篇是接上一篇继续讲的，上一篇讲了如何在DrJava和命令行中使用javac-algs4和java-algs4，这一篇将讲述如何在Eclip</description>
    </item>
    
    <item>
      <title>在Windows上安装「算法 第四版」组件</title>
      <link>http://shuxiao.wang/posts/algs4-windows/</link>
      <pubDate>Wed, 20 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>http://shuxiao.wang/posts/algs4-windows/</guid>
      <description>这篇日志翻译自Hello, World in Java on Windows，翻译的原因是知乎的一个回答，回答完这个问题之后，得到了广泛的。。嗯。。。私信，私信我如何处</description>
    </item>
    
    <item>
      <title>基于C#的蚁群算法实现</title>
      <link>http://shuxiao.wang/posts/ant-algs-based-on-csharp/</link>
      <pubDate>Sat, 25 Oct 2014 00:00:00 +0000</pubDate>
      
      <guid>http://shuxiao.wang/posts/ant-algs-based-on-csharp/</guid>
      <description>这学期有门课，最优化与最优控制，任课老师任华玲，虽然在课堂上我什么都没有学到，但是最后任老师让每个人自己选一篇最优化方向的论文，把其中的算法</description>
    </item>
    
  </channel>
</rss>